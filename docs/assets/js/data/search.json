[
  
  {
    "title": "Frame Rate Checker",
    "url": "/posts/frame-rate-checker/",
    "categories": "Unity, Toys",
    "tags": "unity, csharp, plugin",
    "date": "2021-01-24 17:00:00 +0900",
    





    "snippet": "Note  실제 FPS 값을 실시간, 최근 N개의 평균, 최소, 최댓값으로 확인할 수 있습니다.  게임 진행 동안 텍스트의 위치, 색상, 크기, GUI 표시 상태를 실시간으로 변경할 수 있습니다.PreviewSource Code  https://github.com/rito15/Unity_ToysDownload  FrameRateChecker.zip"
  },
  
  {
    "title": "Job System",
    "url": "/posts/job-system/",
    "categories": "Unity, Study",
    "tags": "unity, csharp, job, burst",
    "date": "2021-01-24 13:15:00 +0900",
    





    "snippet": "개념  유니티에서 안전한 멀티스레딩을 구현하는 시스템  스레드를 별도로 생성하지 않으며, 유니티의 워커스레드에 작업을 지시할 수 있게 한다.  잡 대기열에 잡을 배치하면 워커 스레드가 잡 대기열에서 항목을 가져와 실행한다.  Native Container를 이용해 잡의 수행 결과를 메인 스레드와 공유한다.  버스트 컴파일러를 이용하여 추가적인 성능 향상을 기대할 수 있다.장점  다수의 작은 작업들을 처리하기에 좋으며, 속도가 빠르다.  스레드를 추가로 만들고 관리하지 않아도 되므로 메모리를 절약할 수 있다.  유니티 콘솔을 이..."
  },
  
  {
    "title": "Fog of War",
    "url": "/posts/fog-of-war/",
    "categories": "Unity, Study",
    "tags": "unity, csharp",
    "date": "2021-01-20 21:00:00 +0900",
    





    "snippet": "개념  맵 전체에 걸쳐 RGBA(0, 0, 0, a)의 텍스쳐를 씌워 시야를 표현한다.  지정한 유닛이 현재 위치한 영역들은 a = 0,  지정한 유닛이 한 번이라도 위치했던 영역들은 a = 0.5~0.8,  지정한 유닛이 한 번도 방문하지 않은 영역은 a = 1로 표현한다.구현 방법[1] 카메라와 지상 사이에 안개 플레인 사용      시야의 역할을 해줄 검정색 플레인을 카메라와 지상 사이에 위치시킨다.        맵 전체를 좌표 형태의 2차원배열로 관리하여, 유닛들이 현재 위치한 영역, 방문했던 영역, 한 번도 방문하지 ..."
  },
  
  {
    "title": "Ray Marching",
    "url": "/posts/ray-marching/",
    "categories": "Unity, Study",
    "tags": "unity, csharp",
    "date": "2021-01-19 23:15:00 +0900",
    





    "snippet": "레이 마칭이란?      폴리곤의 정점 정보를 이용하는 기존의 3D 렌더링 방식과는 달리, 레이를 전진시켜(Ray Marching) 표면의 정보를 얻어 오브젝트를 그려내는 기법        레이 마칭의 모든 모델링들은 폴리곤이 아닌 거리 함수(SDF : Signed Distance Function)로 표면의 정보가 계산된다.    한 점(RO : Ray Origin, 위의 그림에서 Camera)에서 스크린의 각각의 픽셀을 향한 방향(RD : Ray Direction, 위의 그림에서 Image)들을 향해레이 캐스팅을 하여, 각 ..."
  },
  
  {
    "title": "Pixelater",
    "url": "/posts/pixelater/",
    "categories": "Unity, Toys",
    "tags": "unity, csharp, plugin",
    "date": "2021-01-19 22:56:00 +0900",
    





    "snippet": "Note  렌더 텍스쳐의 해상도를 강제로 변경하여 화면을 픽셀화시킵니다.  스크립트를 카메라에 부착하여 사용합니다.PreviewReference  https://www.youtube.com/watch?v=5rMkh9sl2bMSource Code  https://github.com/rito15/Unity_ToysDownload  Pixelater.zip"
  },
  
  {
    "title": "AfterImage(Motion Trail)",
    "url": "/posts/afterImage/",
    "categories": "Unity, Toys",
    "tags": "unity, csharp, plugin",
    "date": "2021-01-18 22:56:00 +0900",
    





    "snippet": "Note  게임오브젝트가 지나간 자리에 잔상을 생성합니다.  하위 게임오브젝트에도 렌더러가 있는 경우, 잔상을 함께 생성할 수 있습니다.How To Use  대상 게임오브젝트에 Mesh Renderer가 존재하는 경우, MeshAfterImage 스크립트를 부착합니다.  Skinned Mesh Renderer가 존재하는 경우, SkinnedMeshAfterImage 스크립트를 부착합니다.      After Image Material 필드에 동봉된 AfterImage 마테리얼을 지정합니다.    After Image Gradi..."
  },
  
  {
    "title": "Custom Attributes",
    "url": "/posts/custom-attributes/",
    "categories": "Unity, Toys",
    "tags": "unity, csharp, custom, attribute",
    "date": "2021-01-17 22:18:00 +0900",
    





    "snippet": "Download  https://github.com/rito15/Unity_Custom_AttributesMemoBox  필드의 상단에 상자 및 메모를 표시합니다.            매개변수      설명                  Contents      메모에 적을 내용을 기록합니다. 스트링을 콤마로 구분할 경우 각각 개행됩니다.              FontSize      글자 크기 (기본 : 12)              LineSpacing      줄 간격 (기본 : 2)              TextCo..."
  },
  
  {
    "title": "Unlit으로 만드는 Custom Lit Shadergraph",
    "url": "/posts/unlit-custom-lit-shadergraph/",
    "categories": "Unity Shader, Shader Graph Study",
    "tags": "unity, csharp, shader, shadergraph",
    "date": "2021-01-16 22:14:00 +0900",
    





    "snippet": "목표  URP 쉐이더그래프 중 Unlit 그래프를 이용해 직접 Lit 쉐이더 만들기1. Diffuse 구현  커스텀 함수를 이용하여 메인라이트의 방향, 색상, 감쇠를 얻어낸다.Custom_Mainlight.hlslvoid MainLight_half(float3 WorldPos, out half3 Direction, out half3 Color, out half DistanceAtten, out half ShadowAtten){    #if SHADERGRAPH_PREVIEW        Direction = half3(0.5,..."
  },
  
  {
    "title": "Behavior Tree",
    "url": "/posts/behavior-tree/",
    "categories": "Unity, Study",
    "tags": "unity, csharp",
    "date": "2021-01-05 00:26:00 +0900",
    





    "snippet": "개념  FSM (Finite State Machine)의 단점을 보완하기 위해 만들어진 기법  FSM에서는 상태 전이 조건을 모두 각각의 상태에서 검사하지만, BT에서는 상태 동작 뿐만 아니라 전이 조건도 노드로 관리한다.  노드 그래프를 통해 시각화하거나 params, 빌더 패턴 등을 활용하여 스크립트 내에서도 가독성 좋게 구성할 수 있다.  기본적으로 Leaf, Decorator, Composite 노드를 기반으로 하며, 구현은 많이 다를 수 있다.          Leaf : 동작을 수행하는 노드. 대표적으로 Action..."
  },
  
  {
    "title": "Lighting Models",
    "url": "/posts/lighting-models/",
    "categories": "Unity Shader, Shader Study",
    "tags": "unity, csharp, shader, graphics",
    "date": "2020-11-16 17:14:00 +0900",
    





    "snippet": "Vectors  L (Light) : 정점에서 광원을 향하는 방향의 벡터  N (Normal) : 정점의 노멀 벡터  V (View) : 정점에서 카메라를 향하는 방향의 벡터  R (Reflect) : 노멀벡터를 법선으로 하여 계산한 L의 반사 벡터 ( 2N(NdL)-L )      H (Half) : 블린퐁에서 사용, L와 V의 중간 벡터 ( normalize(L + V) )    NdL = dot(N, L) : 기본 램버트 공식  NdV = dot(N, V) : 림라이트에서 사용  RdV = dot(R, V) : 퐁 스페큘..."
  },
  
  {
    "title": "Getcomponent Attributes",
    "url": "/posts/getcomponent-attributes/",
    "categories": "Unity, Toys",
    "tags": "unity, csharp, plugin",
    "date": "2020-04-12 23:30:00 +0900",
    





    "snippet": "Note  GetComponent(), Find() 종류의 메소드들을 필드/프로퍼티 애트리뷰트로 제공합니다.Catalog/* ******************************************************************************** * *                                    참고사항                                       * * ************************************************************..."
  },
  
  {
    "title": "Save Transform During Play",
    "url": "/posts/save-transform-during-play/",
    "categories": "Unity, Toys",
    "tags": "unity, csharp, plugin",
    "date": "2020-04-11 18:10:00 +0900",
    





    "snippet": "Note      기존에는 플레이 모드에서 트랜스폼의 위치, 회전, 크기를 변경하여도플레이 모드가 종료되면 변경사항이 저장되지 않습니다.        따라서 컴포넌트를 간단히 추가하기만 하면 플레이 모드를 종료해도트랜스폼의 변경사항이 저장되도록 하는 컴포넌트를 제작했습니다.  How to Use      원하는 게임오브젝트에 SaveTransformDuringPlay 컴포넌트를 추가하고, On에 체크합니다.        플레이 모드에서 On, 각각의 Space 옵션을 수정해도 수정사항이 적용됩니다.        인스펙터에서 P..."
  }
  
]

