

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://rito15.github.io/</id>
  <title>Rito15</title>
  <subtitle>Unity Csharp Developer</subtitle>
  <updated>2021-02-08T03:36:19+09:00</updated>
  <author>
    <name>Rito15</name>
    <uri>https://rito15.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://rito15.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="https://rito15.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator>
  <rights> © 2021 Rito15 </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>OpenGL 공부 - 11 - New Beginning 2</title>
    <link href="https://rito15.github.io/posts/opengl-study-11/" rel="alternate" type="text/html" title="OpenGL 공부 - 11 - New Beginning 2" />
    <published>2021-02-07T16:12:00+09:00</published>
  
    <updated>2021-02-07T16:12:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/opengl-study-11/</id>
    <content src="https://rito15.github.io/posts/opengl-study-11/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="OpenGL" />
    
    <category term="OpenGL Study" />
    
  

  
    <summary>
      





      목표


  프로그램 및 쉐이더 객체 생성
  파일에 쉐이더 작성, 불러와 컴파일




공부 내용








Current Source Code


vertex_core.glsl

#version 440

layout (location = 0) in vec3 vertex_position;
layout (location = 1) in vec3 vertex_color;
layout (location = 2) in vec3 vertex_texcoord;

out vec3 vs_position;
out vec3 vs_color;
out vec2 vs_texcoord;

void main()
{
    vs_position = vertex_position;
    vs_color = vertex_color...
    </summary>
  

  </entry>

  
  <entry>
    <title>OpenGL 공부 - 10 - New Beginning</title>
    <link href="https://rito15.github.io/posts/opengl-study-10/" rel="alternate" type="text/html" title="OpenGL 공부 - 10 - New Beginning" />
    <published>2021-02-06T15:20:00+09:00</published>
  
    <updated>2021-02-07T18:05:21+09:00</updated>
  
    <id>https://rito15.github.io/posts/opengl-study-10/</id>
    <content src="https://rito15.github.io/posts/opengl-study-10/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="OpenGL" />
    
    <category term="OpenGL Study" />
    
  

  
    <summary>
      





      목표


  다른 강좌로 새롭게 시작
  GLM, SOIL2 설치




새로운 시작


새로운 강좌를 선택한 김에 기존의 파일들을 날려버리고 구조 변경



공부 내용


GLM ?

  OpenGL Mathematics, 수학 라이브러리.
  http://glm.g-truc.net/0.9.8/index.html 에서 받을 수 있다.
  
    이제는 익숙하게 Dependencies 폴더에 넣고 GLM 포함경로 설정
  
  libs.h에 아래처럼 추가


#include &amp;lt;GLM/glm.hpp&amp;gt;
#include &amp;lt;GLM/vec2.hpp&amp;gt;
#include &amp;lt;GLM/vec3.hpp&amp;gt;
#include &amp;lt;GLM/vec4.hpp&amp;gt;
#include &amp;lt;GLM/m...
    </summary>
  

  </entry>

  
  <entry>
    <title>각종 그래프 모음</title>
    <link href="https://rito15.github.io/posts/mathematics-graph-compilation/" rel="alternate" type="text/html" title="각종 그래프 모음" />
    <published>2021-02-06T05:25:00+09:00</published>
  
    <updated>2021-02-06T05:25:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/mathematics-graph-compilation/</id>
    <content src="https://rito15.github.io/posts/mathematics-graph-compilation/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Mathematics" />
    
    <category term="Graph" />
    
  

  
    <summary>
      





      sin x


cos x


tan x


asin x


acos x


atan x


sin(acos x), cos(asin x)


asin(cos x)


acos(sin x)




sin(e^x)


cos(e^x)


atan(e^x)


asin( e^(-x) )




e^x


e^(1-x)


e^(1-x) * x


    </summary>
  

  </entry>

  
  <entry>
    <title>0~1 구간 가속, 감속 그래프 모음</title>
    <link href="https://rito15.github.io/posts/mathematics-graph-accel_01/" rel="alternate" type="text/html" title="0~1 구간 가속, 감속 그래프 모음" />
    <published>2021-02-06T05:25:00+09:00</published>
  
    <updated>2021-02-06T05:25:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/mathematics-graph-accel_01/</id>
    <content src="https://rito15.github.io/posts/mathematics-graph-accel_01/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Mathematics" />
    
    <category term="Graph" />
    
  

  
    <summary>
      





      1. 가속


\(x^{n}\) 기본 가속 모델




\(\sin\left(\cos^{-1}\left(x-1\right)\right)\)



\(x^{2}\left(3-2x\right)\)



\(\sin\left(\pi\left(x-0.5\right)\right)\cdot0.5+0.5\)




\(\sin^{-1}\left(2x-1\right)\cdot\frac{1}{\pi}+0.5\)




2. 가속 이후 감속


\(x^{a}\left(1-x^{b}\right)c\)

  a &amp;gt; 0
  b &amp;gt; 0




    </summary>
  

  </entry>

  
  <entry>
    <title>유니티 투명 쉐이더와 스텐실 개념 익히기 [작성 중]</title>
    <link href="https://rito15.github.io/posts/unity-transparent-stencil/" rel="alternate" type="text/html" title="유니티 투명 쉐이더와 스텐실 개념 익히기 [작성 중]" />
    <published>2021-02-06T01:29:00+09:00</published>
  
    <updated>2021-02-07T04:43:17+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-transparent-stencil/</id>
    <content src="https://rito15.github.io/posts/unity-transparent-stencil/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity Shader" />
    
    <category term="Shader Study" />
    
  

  
    <summary>
      





      불투명과 투명


불투명(Opaque)과 투명(Transparent) 오브젝트는 그려지는 타이밍도, 그리기 위한 고려사항도 다르다.

유니티에서는 오브젝트를 렌더링하는 순서를 렌더 큐(Render Queue)를 통해 정수 값으로 지정하는데, 
지정한 값이 작은 순서대로 그리게 되며 기본적으로 Opaque는 2000, Transparent는 3000의 값을 가진다.

따라서 불투명 오브젝트가 전부 그려진 후에 투명 오브젝트가 그려진다.



Z-buffer

카메라로부터 픽셀마다 가장 가까운 오브젝트까지의 거리를 (0.0 ~ 1.0) 값으로 기록해놓는 버퍼.

깊이 버퍼(Depth Buffer)라고도 한다.





불투명(Opaque)



불투명 오브젝트를 그리기 위해서 우선 Z버퍼를 참조한다.
각각...
    </summary>
  

  </entry>

</feed>


