

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://rito15.github.io/</id>
  <title>Rito15</title>
  <subtitle>Unity Csharp Developer</subtitle>
  <updated>2021-03-04T23:30:23+09:00</updated>
  <author>
    <name>Rito15</name>
    <uri>https://rito15.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://rito15.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="https://rito15.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator>
  <rights> © 2021 Rito15 </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>유니티 쉐이더 프로퍼티 애트리뷰트 모음</title>
    <link href="https://rito15.github.io/posts/unity-shader-property-attributes/" rel="alternate" type="text/html" title="유니티 쉐이더 프로퍼티 애트리뷰트 모음" />
    <published>2021-03-04T21:58:00+09:00</published>
  
    <updated>2021-03-04T21:58:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-shader-property-attributes/</id>
    <content src="https://rito15.github.io/posts/unity-shader-property-attributes/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity Shader" />
    
    <category term="Shader Study" />
    
  

  
    <summary>
      





      Space


[Space(10)]



  단순 공백을 크기로 지정한다.




Header


[Header(Header Text)]



  헤더 문자열을 지정한다.
  큰따옴표로 묶지 않아야 한다.




Toggle


[Toggle] _MyToggle ("My Toggle", Float) = 1.0



  체크할 경우 1.0, 체크 해제할 경우 0.0으로 값을 받을 수 있다.




IntRange


[IntRange] _Value("Value", Range(0, 100)) = 50



  Range를 정수로 지정할 수 있게 한다.




PowerSlider


[PowerSlider(3.0)] _Pow("Power", Range(0.01, 1)) = 0.01



  지수 슬라이더를...
    </summary>
  

  </entry>

  
  <entry>
    <title>Depth Texture Renderer</title>
    <link href="https://rito15.github.io/posts/unity-toy-depth-texture-renderer/" rel="alternate" type="text/html" title="Depth Texture Renderer" />
    <published>2021-03-03T19:08:00+09:00</published>
  
    <updated>2021-03-03T19:08:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-toy-depth-texture-renderer/</id>
    <content src="https://rito15.github.io/posts/unity-toy-depth-texture-renderer/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity" />
    
    <category term="Unity Toys" />
    
  

  
    <summary>
      





      Note



  
    현재 메인 카메라의 뎁스 텍스쳐를 화면에 렌더링한다.
  
  
    각 쉐이더의 ZWrite 여부에 관계 없이 모두 렌더링하는 단점이 있다.
  
  
    렌더 큐 값이 2500(Skybox) 이하인 오브젝트들만 인식한다.
  




How to Use



  
    DepthRenderer.cs 스크립트를 메인 카메라에 넣는다.
  
  
    enabled를 체크/해제하여 화면에 렌더 텍스쳐를 보여줄지 여부를 결정할 수 있다.
  




Preview



  원래 화면





  뎁스 텍스쳐 렌더링






Download



  DepthRenderer.zip




Source Code



   
RenderDepth.shader


   Sh...
    </summary>
  

  </entry>

  
  <entry>
    <title>파티클 시스템 예제 - 06 - Dr. Strange Portal [TODO]</title>
    <link href="https://rito15.github.io/posts/unity-particle-system-example-06-dr-strange-portal/" rel="alternate" type="text/html" title="파티클 시스템 예제 - 06 - Dr. Strange Portal [TODO]" />
    <published>2021-03-03T03:33:00+09:00</published>
  
    <updated>2021-03-03T03:33:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-particle-system-example-06-dr-strange-portal/</id>
    <content src="https://rito15.github.io/posts/unity-particle-system-example-06-dr-strange-portal/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity" />
    
    <category term="Unity Particle System" />
    
  

  
    <summary>
      





      Preview




    </summary>
  

  </entry>

  
  <entry>
    <title>파티클 시스템 예제 - 05 - Blue Portal [TODO]</title>
    <link href="https://rito15.github.io/posts/unity-particle-system-example-05-blue-portal/" rel="alternate" type="text/html" title="파티클 시스템 예제 - 05 - Blue Portal [TODO]" />
    <published>2021-03-03T03:33:00+09:00</published>
  
    <updated>2021-03-03T03:33:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-particle-system-example-05-blue-portal/</id>
    <content src="https://rito15.github.io/posts/unity-particle-system-example-05-blue-portal/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity" />
    
    <category term="Unity Particle System" />
    
  

  
    <summary>
      





      Preview




    </summary>
  

  </entry>

  
  <entry>
    <title>Projectile Shooter</title>
    <link href="https://rito15.github.io/posts/unity-toy-projectile-shooter/" rel="alternate" type="text/html" title="Projectile Shooter" />
    <published>2021-03-02T03:28:00+09:00</published>
  
    <updated>2021-03-02T03:28:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-toy-projectile-shooter/</id>
    <content src="https://rito15.github.io/posts/unity-toy-projectile-shooter/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity" />
    
    <category term="Unity Toys" />
    
  

  
    <summary>
      





      Note


  
    마우스 클릭 시 등록된 게임오브젝트를 생성하여, 지정된 방향으로 발사하는 스크립트
  
  
    생성된 게임오브젝트는 카메라의 시선에 수직인 평면 방향으로 이동하며, 수명이 다하면 제거된다.
  
  
    오브젝트 풀링이 적용된다.
  




How To Use


  
    빈 게임오브젝트를 생성하고, ParticleShooter를 컴포넌트로 넣는다.
  
  
    발사할 대상 게임오브젝트를 Particle Prefab 필드에 넣는다.
  
  
    Direction으로 발사할 방향을 지정할 수 있다.
  
  
    Life Time으로 대상 게임오브젝트의 수명을 지정할 수 있다.
  
  
    Speed로 대상 게임오브젝트의 이동속도를 지정할 수 있...
    </summary>
  

  </entry>

</feed>


