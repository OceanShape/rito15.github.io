

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://rito15.github.io/</id>
  <title>Rito15</title>
  <subtitle>Unity Csharp Developer</subtitle>
  <updated>2021-07-04T03:48:49+09:00</updated>
  <author>
    <name>Rito15</name>
    <uri>https://rito15.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://rito15.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="https://rito15.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator>
  <rights> © 2021 Rito15 </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>(Amplify) Directional 2 Color Dissolve Shader</title>
    <link href="https://rito15.github.io/posts/unity-amplify-2-color-dissolve/" rel="alternate" type="text/html" title="(Amplify) Directional 2 Color Dissolve Shader" />
    <published>2021-07-03T18:00:00+09:00</published>
  
    <updated>2021-07-03T18:00:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-amplify-2-color-dissolve/</id>
    <content src="https://rito15.github.io/posts/unity-amplify-2-color-dissolve/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity Shader" />
    
    <category term="Amplify Shader" />
    
  

  
    <summary>
      





      Summary



  
    디졸브 방향을 직접 지정할 수 있는 디졸브 쉐이더
  
  
    디졸브 효과 색상 2가지를 지정할 수 있다.
  
  
    포스트 프로세싱 Bloom 효과가 반드시 필요하다.
    
      Preview 설정 : Intensity 3, Threshold 0.9
    
  




Preview






Properties






Settings


Blend Mode

  Transparent




Nodes






Note


쉐이더 프로퍼티 중, Min Offset, Max Offset은 각각 디졸브의 시작과 끝 지점을 조정한다.

메시 정보 또는 디졸브 방향이 다르면 이 값들은 모두 달라질 수 있다.

이를 직접 계산하려면 굉장히 번거로우므...
    </summary>
  

  </entry>

  
  <entry>
    <title>(Amplify) Magical Orb Shader</title>
    <link href="https://rito15.github.io/posts/unity-amplify-magical-orb/" rel="alternate" type="text/html" title="(Amplify) Magical Orb Shader" />
    <published>2021-07-03T17:00:00+09:00</published>
  
    <updated>2021-07-03T17:00:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-amplify-magical-orb/</id>
    <content src="https://rito15.github.io/posts/unity-amplify-magical-orb/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity Shader" />
    
    <category term="Amplify Shader" />
    
  

  
    <summary>
      





      Preview






Properties






Settings


General

  Light Model - Unlit


Blend Mode

  Transparent




Nodes






Download



  2021_0703_Magical Orb.zip




References


  https://www.youtube.com/watch?v=DpXPhGeCqus


    </summary>
  

  </entry>

  
  <entry>
    <title>Game View Auto Updater(에디터 모드에서 게임 뷰 자동으로 갱신)</title>
    <link href="https://rito15.github.io/posts/unity-game-view-auto-updater/" rel="alternate" type="text/html" title="Game View Auto Updater(에디터 모드에서 게임 뷰 자동으로 갱신)" />
    <published>2021-06-30T22:00:00+09:00</published>
  
    <updated>2021-07-02T17:52:44+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-game-view-auto-updater/</id>
    <content src="https://rito15.github.io/posts/unity-game-view-auto-updater/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity" />
    
    <category term="Unity Editor Utilities" />
    
  

  
    <summary>
      





      Summary


플레이 모드에 진입하지 않으면 게임 뷰는 GUI에 변화가 있을 때만 갱신됩니다.

따라서 쉐이더를 통해 각종 애니메이션이나 효과를 만들고 마테리얼을 통해 적용해도

에디터 모드에서는 이를 정상적으로 확인할 수 없습니다.

이 애셋은 에디터 모드에서도 마테리얼 효과를 정상적으로 확인할 수 있게 합니다.



How To Use


  
    첨부된 Game-View-Auto-Updater.unitypackage 파일을 다운받습니다.
  
  
    유니티 프로젝트가 켜진 상태로 해당 파일을 실행하여 프로젝트 내에 임포트합니다.
  
  
    에디터 상단의 플레이 버튼 좌측에 위치한 Auto Update Game View 버튼을 활성화/비활성화합니다.
  






Preview...
    </summary>
  

  </entry>

  
  <entry>
    <title>게임 뷰를 강제로 업데이트하기</title>
    <link href="https://rito15.github.io/posts/unity-update-game-view/" rel="alternate" type="text/html" title="게임 뷰를 강제로 업데이트하기" />
    <published>2021-06-30T21:00:00+09:00</published>
  
    <updated>2021-06-30T21:00:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-update-game-view/</id>
    <content src="https://rito15.github.io/posts/unity-update-game-view/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity" />
    
    <category term="Unity Editor Memo" />
    
  

  
    <summary>
      





      Memo


  
    플레이 모드에 진입하지 않고 게임 뷰에서 쉐이더 애니메이션을 확인하고 싶을 때 사용한다.
  
  
    아무 게임오브젝트나 붙잡고 Dirty로 만들어주면 게임 뷰가 업데이트 된다.
  


EditorUtility.SetDirty(GameObject.FindObjectOfType&amp;lt;Transform&amp;gt;());





  다음과 같은 Repaint 메소드들은 통하지 않는다.


EditorWindow focused = EditorWindow.focusedWindow;
focused.Repaint();
UnityEditorInternal.InternalEditorUtility.RepaintAllViews();
SceneView.RepaintAll();
if (GUI.c...
    </summary>
  

  </entry>

  
  <entry>
    <title>Main Thread Dispatcher</title>
    <link href="https://rito15.github.io/posts/unity-main-thread-dispatcher/" rel="alternate" type="text/html" title="Main Thread Dispatcher" />
    <published>2021-06-30T04:04:00+09:00</published>
  
    <updated>2021-06-30T04:04:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-main-thread-dispatcher/</id>
    <content src="https://rito15.github.io/posts/unity-main-thread-dispatcher/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity" />
    
    <category term="Unity Toys" />
    
  

  
    <summary>
      





      Summary


  
    워커 스레드에서 유니티 메인 스레드에 작업을 위임할 수 있게 하는 싱글톤 클래스
  
  
    https://github.com/PimDeWitte/UnityMainThreadDispatcher의 코드를 조금 더 사용하기 편리하게 살짝 수정
  


Usage Example


private MainThreadDispatcher mtd;

private void Start()
{
    mtd = MainThreadDispatcher.Instance;
    Task.Run(() =&amp;gt; TestBody());
}

private async void TestBody()
{
    int res1 = -1, res2 = -1;

    await Task.Delay(5...
    </summary>
  

  </entry>

</feed>


