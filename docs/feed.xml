

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://rito15.github.io/</id>
  <title>Rito15</title>
  <subtitle>Unity Csharp Developer</subtitle>
  <updated>2021-03-18T21:03:17+09:00</updated>
  <author>
    <name>Rito15</name>
    <uri>https://rito15.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://rito15.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="https://rito15.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator>
  <rights> © 2021 Rito15 </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>파티클 시스템 예제 - 08 - Meteor Swarm [TODO]</title>
    <link href="https://rito15.github.io/posts/unity-particle-system-example-08-meteor-swarm/" rel="alternate" type="text/html" title="파티클 시스템 예제 - 08 - Meteor Swarm [TODO]" />
    <published>2021-03-16T17:10:00+09:00</published>
  
    <updated>2021-03-16T17:10:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-particle-system-example-08-meteor-swarm/</id>
    <content src="https://rito15.github.io/posts/unity-particle-system-example-08-meteor-swarm/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity" />
    
    <category term="Unity Particle System" />
    
  

  
    <summary>
      





      Preview





    </summary>
  

  </entry>

  
  <entry>
    <title>파티클 시스템 예제 - 07 - Fireworks</title>
    <link href="https://rito15.github.io/posts/unity-particle-system-example-07-fireworks/" rel="alternate" type="text/html" title="파티클 시스템 예제 - 07 - Fireworks" />
    <published>2021-03-16T17:10:00+09:00</published>
  
    <updated>2021-03-16T17:10:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-particle-system-example-07-fireworks/</id>
    <content src="https://rito15.github.io/posts/unity-particle-system-example-07-fireworks/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity" />
    
    <category term="Unity Particle System" />
    
  

  
    <summary>
      





      목차



  목표
  준비물
  1. Fireworks 이펙트
  2. SubEmitter - Birth
  3. SubEmitter - Death
  4. SubEmitter - Death Flash
  5. 완성


Preview






목표



  
    서브 이미터 모듈 이해하기
  
  
    불꽃놀이 이펙트 완성하기
  




준비물



  동그란 텍스쳐와 Additive 마테리얼






1. Fireworks 이펙트


불꽃을 하늘로 쏘아올리는, 간단한 형태의 이펙트를 우선 제작한다.



준비


  
    하이라키 - 우클릭 - [Effects] - [Particle System]을 통해 파티클 시스템 게임오브젝트를 생성한다.
  
  
    생성된 게임오브젝트를 ...
    </summary>
  

  </entry>

  
  <entry>
    <title>포스트 프로세싱 적용하기</title>
    <link href="https://rito15.github.io/posts/unity-memo-post-processing/" rel="alternate" type="text/html" title="포스트 프로세싱 적용하기" />
    <published>2021-03-16T17:00:00+09:00</published>
  
    <updated>2021-03-16T17:00:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-memo-post-processing/</id>
    <content src="https://rito15.github.io/posts/unity-memo-post-processing/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity" />
    
    <category term="Unity Memo" />
    
  

  
    <summary>
      





      1. Built-in Pipeline



  
    Package Manager - [Post Processing] 설치
  
  
    레이어 - [Post Processing] 추가
  




  메인 카메라
    
      컴포넌트 추가 : Post-process Layer
      Volume blending - Layer : [Post Processing] 설정
    
  




  빈 게임오브젝트 추가 : “Volume”
    
      레이어 설정 : [Post Processing]
      컴포넌트 추가 : Post-process Volume
        
          Is Global 체크
          Profile - [New]
          [A...
    </summary>
  

  </entry>

  
  <entry>
    <title>Stencil Silhouette Shader</title>
    <link href="https://rito15.github.io/posts/unity-shader-script-stencil-silhouette/" rel="alternate" type="text/html" title="Stencil Silhouette Shader" />
    <published>2021-03-15T17:20:00+09:00</published>
  
    <updated>2021-03-15T17:20:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-shader-script-stencil-silhouette/</id>
    <content src="https://rito15.github.io/posts/unity-shader-script-stencil-silhouette/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity Shader" />
    
    <category term="Shader Scripts" />
    
  

  
    <summary>
      





      Summary



  가려질 경우 단색이 드러나는 실루엣 쉐이더
  Ref 2번 사용


Preview




Source Code



   
Silhouette.shader


  Shader "Custom/Silhouette"
{
    Properties
    {
        _SilhouetteColor ("Silhouette Color", Color) = (1, 0, 0, 0.5)

        [Space]
        _Color ("Color", Color) = (1,1,1,1)
        _MainTex ("Albedo (RGB)", 2D) = "white" {}
    }
    SubShader
    {
        Tags { "RenderType"="Opaque...
    </summary>
  

  </entry>

  
  <entry>
    <title>Stencil Mask Shader</title>
    <link href="https://rito15.github.io/posts/unity-shader-script-stencil-mask/" rel="alternate" type="text/html" title="Stencil Mask Shader" />
    <published>2021-03-15T17:10:00+09:00</published>
  
    <updated>2021-03-15T17:10:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-shader-script-stencil-mask/</id>
    <content src="https://rito15.github.io/posts/unity-shader-script-stencil-mask/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity Shader" />
    
    <category term="Shader Scripts" />
    
  

  
    <summary>
      





      Summary



  스텐실 마스크 &amp;amp; 마스크로 가려야 드러나는 타겟 쉐이더
  Ref 1번 사용


Preview




Source Code



   
StencilTarget01.shader


  Shader "Custom/StencilTarget01"
{
    Properties
    {
        _Color ("Color", Color) = (1,1,1,1)
        _MainTex ("Albedo (RGB)", 2D) = "white" {}
    }
    SubShader
    {
        Tags { "RenderType"="Opaque" }

        Stencil
        {
            Ref 1
            Comp ...
    </summary>
  

  </entry>

</feed>


