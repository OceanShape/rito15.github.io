

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://rito15.github.io/</id>
  <title>Rito15</title>
  <subtitle>Unity Csharp Developer</subtitle>
  <updated>2021-09-08T00:37:32+09:00</updated>
  <author>
    <name>Rito15</name>
    <uri>https://rito15.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://rito15.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="https://rito15.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator>
  <rights> © 2021 Rito15 </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>유니티 안드로이드 토스트 메시지 표시하기</title>
    <link href="https://rito15.github.io/posts/unity-android-toast-message/" rel="alternate" type="text/html" title="유니티 안드로이드 토스트 메시지 표시하기" />
    <published>2021-09-07T21:42:00+09:00</published>
  
    <updated>2021-09-07T21:42:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-android-toast-message/</id>
    <content src="https://rito15.github.io/posts/unity-android-toast-message/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity" />
    
    <category term="Unity Android Memo" />
    
  

  
    <summary>
      





      AndroidToast Singleton


Usage

AndroidToast.I.ShowToastMessage(string message, ToastLength length);


Option


  ToastLength.Short : 약 2.5초 동안 메시지 표시
  ToastLength.Long : 약 4초 동안 메시지 표시


Source Code


   
AndroidToast.cs


  using System.Collections;
using System.Collections.Generic;
using UnityEngine;

/// &amp;lt;summary&amp;gt; 안드로이드 토스트 메시지 표시 싱글톤 &amp;lt;/summary&amp;gt;
public class AndroidToast : Mono...
    </summary>
  

  </entry>

  
  <entry>
    <title>유니티 스크린샷 찍고 저장하기</title>
    <link href="https://rito15.github.io/posts/unity-save-screen-shot/" rel="alternate" type="text/html" title="유니티 스크린샷 찍고 저장하기" />
    <published>2021-09-07T20:20:00+09:00</published>
  
    <updated>2021-09-07T20:20:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-save-screen-shot/</id>
    <content src="https://rito15.github.io/posts/unity-save-screen-shot/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity" />
    
    <category term="Unity Memo" />
    
  

  
    <summary>
      





      1. Unity Editor


저장할 경로

  $”{Application.dataPath}/ScreenShots/”


실제 경로

  “[프로젝트 디렉토리]/Assets/ScreenShots/”





2. Standalone App


저장할 경로

  $”{Application.dataPath}/ScreenShots/”


실제 경로

  “[실행파일명]/[실행파일명_Data]/ScreenShots/”





3. Android


저장할 경로

  $”{Application.persistentDataPath}/ScreenShots/”


실제 경로

  “/mnt/sdcard/Android/data/[패키지명]/files/ScreenShots/”




권한 요청하기


  링크




...
    </summary>
  

  </entry>

  
  <entry>
    <title>유니티 - 플랫폼별 경로들</title>
    <link href="https://rito15.github.io/posts/unity-path-by-platform/" rel="alternate" type="text/html" title="유니티 - 플랫폼별 경로들" />
    <published>2021-09-07T19:39:00+09:00</published>
  
    <updated>2021-09-07T19:39:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-path-by-platform/</id>
    <content src="https://rito15.github.io/posts/unity-path-by-platform/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity" />
    
    <category term="Unity Memo" />
    
  

  
    <summary>
      





      경로 파라미터



  &amp;lt;projectroot&amp;gt; : 유니티 에디터 프로젝트 폴더 루트 경로
  &amp;lt;executablefolder&amp;gt; : 빌드된 실행 파일의 폴더 경로
  &amp;lt;companyname&amp;gt; : Project Settings - Player에서 지정한 Company Name
  &amp;lt;productname&amp;gt; : Project Settings - Player에서 지정한 Product Name
  &amp;lt;packagename&amp;gt; : com.&amp;lt;companyname&amp;gt;.&amp;lt;productname&amp;gt;




읽기, 쓰기 모두 가능한 경로


Windows Editor

Application.dataPath
"&amp;lt;projectroot&amp;gt;/Assets"...
    </summary>
  

  </entry>

  
  <entry>
    <title>유니티 안드로이드 권한 요청하기</title>
    <link href="https://rito15.github.io/posts/unity-android-authority/" rel="alternate" type="text/html" title="유니티 안드로이드 권한 요청하기" />
    <published>2021-09-07T16:50:00+09:00</published>
  
    <updated>2021-09-07T16:50:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-android-authority/</id>
    <content src="https://rito15.github.io/posts/unity-android-authority/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity" />
    
    <category term="Unity Android Memo" />
    
  

  
    <summary>
      





      Memo


  안드로이드의 카메라, 로컬 스토리지 등의 기능을 사용하려면 권한을 반드시 요청해야 한다.
  Android 6(API Lv.23) 이상에서는 Android.Permission API를 통해 런타임에 권한을 요청할 수 있다.




공통


안드로이드 매니페스트 파일 경로


  
    구글링하면 대부분 나오는 Root/Temp/StagingArea/AndroidManifest.xml 경로는 2019.3 미만 버전이다.
  
  
    2019.3 이상부터는 Root/Temp/gradleOut/unityLibrary/src/main/AndroidManifest.xml 이다.
  




안드로이드 매니페스트 오버라이드하기


  위에서 찾은 파일을 Assets/Plugins/Andro...
    </summary>
  

  </entry>

  
  <entry>
    <title>유니티 안드로이드 USB 디버깅하기</title>
    <link href="https://rito15.github.io/posts/unity-android-usb-debugging/" rel="alternate" type="text/html" title="유니티 안드로이드 USB 디버깅하기" />
    <published>2021-09-07T16:49:00+09:00</published>
  
    <updated>2021-09-07T16:49:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-android-usb-debugging/</id>
    <content src="https://rito15.github.io/posts/unity-android-usb-debugging/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity" />
    
    <category term="Unity Android Memo" />
    
  

  
    <summary>
      





      LogCat 패키지 설치






USB 디버깅 허용



  기기마다 방법이 다를 수 있다.
  
    https://support-mirroring.mobizen.com/hc/ko/articles/216761537-USB-디버깅-모드-설정방법-안내
  
  설정
  휴대폰 정보
  소프트웨어 정보
  
    빌드 번호 연속 7번 터치
  
  설정
  개발자 옵션
  USB 디버깅 체크




USB 연결 및 앱 실행



  
    USB를 안드로이드 기기에 연결한다.
  
  
    빌드된 앱을 기기에서 실행한다.
  
  
    Build And Run을 통해 빌드하자마자 기기에서 실행할 수도 있으며,
이를 이용하면 변경사항이 생겼을 때 apk 파일을 직접 교체하지 않고 변경사항을 ...
    </summary>
  

  </entry>

</feed>


