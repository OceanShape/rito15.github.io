

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://rito15.github.io/</id>
  <title>Rito15</title>
  <subtitle>Unity Csharp Developer</subtitle>
  <updated>2021-09-15T15:18:49+09:00</updated>
  <author>
    <name>Rito15</name>
    <uri>https://rito15.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://rito15.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="https://rito15.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator>
  <rights> © 2021 Rito15 </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>유니티 - UI 이미지에 구멍뚫기</title>
    <link href="https://rito15.github.io/posts/unity-punch-ui-image/" rel="alternate" type="text/html" title="유니티 - UI 이미지에 구멍뚫기" />
    <published>2021-09-15T15:00:00+09:00</published>
  
    <updated>2021-09-15T15:00:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-punch-ui-image/</id>
    <content src="https://rito15.github.io/posts/unity-punch-ui-image/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity" />
    
    <category term="Unity Memo - Shorts" />
    
  

  
    <summary>
      





      Mask




이런 이미지에



이런 마스크를 씌우려면


  Mask Image (Image, Mask 컴포넌트 존재)
    
      Image (Image 컴포넌트 존재)
    
  


이렇게 마스크 이미지, 보여질 이미지를 부모-자식 관계로 구성하면 된다.



그러면 이렇게 마스크 이미지와 겹치는 영역만 보인다.



Punch


반대로 마스크 이미지와 겹치는 영역만 안보이도록,

마치 구멍이 뚫린 것 같이 표현하려면

우선 마테리얼 하나를 만든다.



그리고 프로퍼티 값들을 위와 같이 설정한다.





마스크의 자식으로 있는 이미지의 Image 컴포넌트에서

Material에 해당 마테리얼을 넣어주고, Maskable 옵션을 체크 해제한다.





이제 위와 같이 마스크 모...
    </summary>
  

  </entry>

  
  <entry>
    <title>유니티 - 한글 주석 인코딩 깨지는 경우 해결하기</title>
    <link href="https://rito15.github.io/posts/unity-editorconfig-encoding/" rel="alternate" type="text/html" title="유니티 - 한글 주석 인코딩 깨지는 경우 해결하기" />
    <published>2021-09-15T02:34:00+09:00</published>
  
    <updated>2021-09-15T02:34:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-editorconfig-encoding/</id>
    <content src="https://rito15.github.io/posts/unity-editorconfig-encoding/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity" />
    
    <category term="Unity Editor" />
    
  

  
    <summary>
      





      Note


문제 확인



비주얼 스튜디오에서는 위와 같이 잘 보이던 한글 주석이



유니티 에디터에서 보면 이렇게 깨지는 경우가 있다.

당장은 스크립팅에 문제가 없더라도,

스크립트 파일을 전송하거나 협업을 하게 될 때 문제가 생길 수 있다.



인코딩

인코딩을 확인해보면



EUC-KR의 확장인 코드 페이지 949(CP949)임을 알 수 있다.

추후 문제가 발생하지 않도록 하려면 유니코드로 저장할 필요가 있다.



EditorConfig 파일 생성



비주얼 스튜디오의 솔루션 탐색기에서 솔루션을 우클릭한 뒤,

추가 - 새 항목을 클릭한다.



editorconfig 파일(기본값) 을 선택하고, 이름은 굳이 바꾸지 말고 추가 버튼을 클릭한다.



EditorConfig 파일 편집...
    </summary>
  

  </entry>

  
  <entry>
    <title>.NET CIL 명령어 모음</title>
    <link href="https://rito15.github.io/posts/dotnet-cil-instructions/" rel="alternate" type="text/html" title=".NET CIL 명령어 모음" />
    <published>2021-09-14T03:55:00+09:00</published>
  
    <updated>2021-09-14T18:48:26+09:00</updated>
  
    <id>https://rito15.github.io/posts/dotnet-cil-instructions/</id>
    <content src="https://rito15.github.io/posts/dotnet-cil-instructions/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="C#" />
    
    <category term="C# Grammar" />
    
  

  
    <summary>
      





      Instructions


Stack

  스택 : 계산 스택(Evaluation Stack)
  “스택의 값”을 언급하는 경우는 스택의 값을 꺼내어(Pop) 사용한다는 의미이다.
  “스택의 두 값”을 언급하는 경우는 스택에서 두 값을 꺼내어 사용한다는 의미이다.
  
    “스택의 두 값 A B”를 언급하는 경우, A는 스택에 먼저 넣었던 값이고 B는 그 다음에 넣은 값(Top)이다.
  
  ld로 시작하는 명령어는 Load를 의미하며, 대상의 값을 스택에 넣는다.
  
    ldFOO.0 명령어는 FOO 목록의 0번 인덱스에 있는 값을 스택에 넣는다.
  
  st로 시작하는 명령어는 Store를 의미하며, 스택의 값을 꺼내 다른 곳에 저장한다.
  stFOO.0 명령어는 스택에서 값을 꺼내...
    </summary>
  

  </entry>

  
  <entry>
    <title>C# if-else if vs switch-case vs Dictionary</title>
    <link href="https://rito15.github.io/posts/cs-switch-case-vs-dictionary/" rel="alternate" type="text/html" title="C# if-else if vs switch-case vs Dictionary" />
    <published>2021-09-13T00:01:00+09:00</published>
  
    <updated>2021-09-15T05:33:14+09:00</updated>
  
    <id>https://rito15.github.io/posts/cs-switch-case-vs-dictionary/</id>
    <content src="https://rito15.github.io/posts/cs-switch-case-vs-dictionary/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="C#" />
    
    <category term="C# Memo" />
    
  

  
    <summary>
      





      분기 처리


특정 변수의 값에 따라 분기를 나누어 처리해야 하는 경우,

일반적으로 if-else if 또는 switch-case문을 사용할 수 있다.

int value = someValue;

if(value == 0) DoSomething0();
else if(value == 1) DoSomething1();
else if(value == 2) DoSomething2();


int value = someValue;

switch(value)
{
    case 0 : DoSomething0() break;
    case 1 : DoSomething1() break;
    case 2 : DoSomething2() break;
}


그리고 이를 Dictionary를 통해 처리할 수도 있다....
    </summary>
  

  </entry>

  
  <entry>
    <title>(Amplify) Screen Effect - Ice (Freezing)</title>
    <link href="https://rito15.github.io/posts/unity-amplify-screen-ice/" rel="alternate" type="text/html" title="(Amplify) Screen Effect - Ice (Freezing)" />
    <published>2021-09-12T01:01:00+09:00</published>
  
    <updated>2021-09-13T05:19:26+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-amplify-screen-ice/</id>
    <content src="https://rito15.github.io/posts/unity-amplify-screen-ice/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity Shader" />
    
    <category term="Amplify Shader" />
    
  

  
    <summary>
      





      Summary


  
    화면이 가장자리부터 얼어붙는 효과
  
  
    스크린 이펙트 적용 애셋 : Link
  




Preview








Properties



  Ice Texture
    
      얼음 효과로 사용할 텍스쳐
      원하는 텍스쳐를 사용하면 된다.
    
  
  Range
    
      효과 적용 범위 (0 ~ 1)
    
  
  Noise Scale
    
      기본 값 : 4
      노이즈 적용 스케일
    
  
  Power A
    
      기본 값 : 3
      영역의 모양
      작을수록 원형, 클수록 사각형에 가까워진다.
    
  
  Power B
    
      기본 값 : 2
      ...
    </summary>
  

  </entry>

</feed>


