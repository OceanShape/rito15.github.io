

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://rito15.github.io/</id>
  <title>Rito15</title>
  <subtitle>Unity Csharp Developer</subtitle>
  <updated>2021-02-09T02:20:29+09:00</updated>
  <author>
    <name>Rito15</name>
    <uri>https://rito15.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://rito15.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="https://rito15.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator>
  <rights> © 2021 Rito15 </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Custom Mouse Events</title>
    <link href="https://rito15.github.io/posts/unity-custom-mouse-events/" rel="alternate" type="text/html" title="Custom Mouse Events" />
    <published>2021-02-08T21:54:00+09:00</published>
  
    <updated>2021-02-08T21:54:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-custom-mouse-events/</id>
    <content src="https://rito15.github.io/posts/unity-custom-mouse-events/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity" />
    
    <category term="Unity Toys" />
    
  

  
    <summary>
      





      구현 동기

유니티 모노비헤이비어는 OnMouse로 시작하는 이벤트 메소드들을 작성하여 사용할 수 있습니다.

이 이벤트 메소드들은 레이캐스트 기반으로 동작하며, 해당 마우스 동작이 발생하면 메소드가 호출됩니다.

하지만 여러가지 단점들이 있습니다.


  마우스 좌클릭에 대해서만 동작합니다.
  이벤트 메소드 작성 시, 비워놓거나 해당 이벤트가 발생하지 않는 상황에도 성능을 소모합니다.
  컴포넌트를 비활성화하거나, 심지어 게임오브젝트를 비활성화해도 성능을 소모합니다.
  마우스가 닿은 정확한 위치를 알 수 없습니다.
  대상을 레이어로 필터링할 수 없습니다.


이런 단점들을 극복하고자 새롭게 구현하였습니다.



동작 원리



  MouseEventCaller 컴포넌트가 매 프레임 마우스 위치에...
    </summary>
  

  </entry>

  
  <entry>
    <title>OpenGL 공부 - 12 - New Beginning 3</title>
    <link href="https://rito15.github.io/posts/opengl-study-12/" rel="alternate" type="text/html" title="OpenGL 공부 - 12 - New Beginning 3" />
    <published>2021-02-07T16:12:00+09:00</published>
  
    <updated>2021-02-07T16:12:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/opengl-study-12/</id>
    <content src="https://rito15.github.io/posts/opengl-study-12/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="OpenGL" />
    
    <category term="OpenGL Study" />
    
  

  
    <summary>
      





      목표


  기본 렌더링 세팅
  기본 도형 렌더링




공부 내용


테스트를 위해 렌더링 옵션들 설정

// main.cpp - in main()

glEnable(GL_DEPTH_TEST);

glEnable(GL_CULL_FACE);
glCullFace(GL_BACK);
glFrontFace(GL_CCW); // 시계 반대 방향으로 구성된 폴리곤을 전면으로 설정

// 픽셀 블렌딩 연산 지정
glEnable(GL_BLEND);
glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);

// GL_LINE : 폴리곤을 선으로 그리기
// GL_FILL : 폴리곤을 색상으로 채우기
glPolygonMode(GL_FRONT_AND_BACK, GL_FILL);



...
    </summary>
  

  </entry>

  
  <entry>
    <title>OpenGL 공부 - 11 - New Beginning 2</title>
    <link href="https://rito15.github.io/posts/opengl-study-11/" rel="alternate" type="text/html" title="OpenGL 공부 - 11 - New Beginning 2" />
    <published>2021-02-07T16:12:00+09:00</published>
  
    <updated>2021-02-07T16:12:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/opengl-study-11/</id>
    <content src="https://rito15.github.io/posts/opengl-study-11/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="OpenGL" />
    
    <category term="OpenGL Study" />
    
  

  
    <summary>
      





      목표


  프로그램 및 쉐이더 객체 생성
  파일에 쉐이더 작성, 불러와 컴파일




공부 내용








Current Source Code


vertex_core.glsl

#version 440

layout (location = 0) in vec3 vertex_position;
layout (location = 1) in vec3 vertex_color;
layout (location = 2) in vec3 vertex_texcoord;

out vec3 vs_position;
out vec3 vs_color;
out vec2 vs_texcoord;

void main()
{
    vs_position = vertex_position;
    vs_color = vertex_color...
    </summary>
  

  </entry>

  
  <entry>
    <title>OpenGL 공부 - 10 - New Beginning</title>
    <link href="https://rito15.github.io/posts/opengl-study-10/" rel="alternate" type="text/html" title="OpenGL 공부 - 10 - New Beginning" />
    <published>2021-02-06T15:20:00+09:00</published>
  
    <updated>2021-02-07T18:05:21+09:00</updated>
  
    <id>https://rito15.github.io/posts/opengl-study-10/</id>
    <content src="https://rito15.github.io/posts/opengl-study-10/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="OpenGL" />
    
    <category term="OpenGL Study" />
    
  

  
    <summary>
      





      목표


  다른 강좌로 새롭게 시작
  GLM, SOIL2 설치




새로운 시작


새로운 강좌를 선택한 김에 기존의 파일들을 날려버리고 구조 변경



공부 내용


GLM ?

  OpenGL Mathematics, 수학 라이브러리.
  http://glm.g-truc.net/0.9.8/index.html 에서 받을 수 있다.
  
    이제는 익숙하게 Dependencies 폴더에 넣고 GLM 포함경로 설정
  
  libs.h에 아래처럼 추가


#include &amp;lt;GLM/glm.hpp&amp;gt;
#include &amp;lt;GLM/vec2.hpp&amp;gt;
#include &amp;lt;GLM/vec3.hpp&amp;gt;
#include &amp;lt;GLM/vec4.hpp&amp;gt;
#include &amp;lt;GLM/m...
    </summary>
  

  </entry>

  
  <entry>
    <title>각종 그래프 모음</title>
    <link href="https://rito15.github.io/posts/mathematics-graph-compilation/" rel="alternate" type="text/html" title="각종 그래프 모음" />
    <published>2021-02-06T05:25:00+09:00</published>
  
    <updated>2021-02-06T05:25:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/mathematics-graph-compilation/</id>
    <content src="https://rito15.github.io/posts/mathematics-graph-compilation/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Mathematics" />
    
    <category term="Graph" />
    
  

  
    <summary>
      





      sin x


cos x


tan x


asin x


acos x


atan x


sin(acos x), cos(asin x)


asin(cos x)


acos(sin x)




sin(e^x)


cos(e^x)


atan(e^x)


asin( e^(-x) )




e^x


e^(1-x)


e^(1-x) * x


    </summary>
  

  </entry>

</feed>


