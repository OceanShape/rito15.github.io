

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://rito15.github.io/</id>
  <title>Rito15</title>
  <subtitle>Unity Csharp Developer</subtitle>
  <updated>2021-08-20T02:46:24+09:00</updated>
  <author>
    <name>Rito15</name>
    <uri>https://rito15.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://rito15.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="https://rito15.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator>
  <rights> © 2021 Rito15 </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Enum을 인덱스로 사용할 경우, 배열과 딕셔너리의 참조 성능 비교</title>
    <link href="https://rito15.github.io/posts/cs-enum-index-array-vs-dict/" rel="alternate" type="text/html" title="Enum을 인덱스로 사용할 경우, 배열과 딕셔너리의 참조 성능 비교" />
    <published>2021-08-19T23:11:00+09:00</published>
  
    <updated>2021-08-19T23:11:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/cs-enum-index-array-vs-dict/</id>
    <content src="https://rito15.github.io/posts/cs-enum-index-array-vs-dict/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="C#" />
    
    <category term="C# Memo" />
    
  

  
    <summary>
      





      요약



  array[(int)enumValue], dict[enumValue]의 참조 성능을 비교한다.




테스트 코드


public enum MyEnum
{
    Zero, One, Two, Three, Four, Five, Six, Seven, Eight, Nine
}

public float[] targetArray;
public Dictionary&amp;lt;MyEnum, float&amp;gt; targetDict;

[GlobalSetup]
public void GlobalSetup()
{
    targetArray = new float[10];
    targetDict = new Dictionary&amp;lt;MyEnum, float&amp;gt;(10);

    for (int i = 0; i ...
    </summary>
  

  </entry>

  
  <entry>
    <title>(Amplify) Screen Effect - Shake [TODO]</title>
    <link href="https://rito15.github.io/posts/unity-amplify-screen-shake/" rel="alternate" type="text/html" title="(Amplify) Screen Effect - Shake [TODO]" />
    <published>2021-08-19T02:55:00+09:00</published>
  
    <updated>2021-08-19T02:55:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-amplify-screen-shake/</id>
    <content src="https://rito15.github.io/posts/unity-amplify-screen-shake/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity Shader" />
    
    <category term="Amplify Shader" />
    
  

  
    <summary>
      





      Summary


  화면 흔들림 이펙트




Preview






Nodes






Download


  2021_0817_Screen Effect_Shake.zip



    </summary>
  

  </entry>

  
  <entry>
    <title>(Amplify) Screen Effect - Hexagons [TODO]</title>
    <link href="https://rito15.github.io/posts/unity-amplify-screen-hexagons/" rel="alternate" type="text/html" title="(Amplify) Screen Effect - Hexagons [TODO]" />
    <published>2021-08-19T02:55:00+09:00</published>
  
    <updated>2021-08-19T02:55:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-amplify-screen-hexagons/</id>
    <content src="https://rito15.github.io/posts/unity-amplify-screen-hexagons/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity Shader" />
    
    <category term="Amplify Shader" />
    
  

  
    <summary>
      





      Summary


  육각형 패턴 이펙트




Preview






Nodes






Download


  2021_0817_Screen Effect_Hexagons.zip



    </summary>
  

  </entry>

  
  <entry>
    <title>(Amplify) Screen Effect - Damage [TODO]</title>
    <link href="https://rito15.github.io/posts/unity-amplify-screen-damage/" rel="alternate" type="text/html" title="(Amplify) Screen Effect - Damage [TODO]" />
    <published>2021-08-19T02:55:00+09:00</published>
  
    <updated>2021-08-19T02:55:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-amplify-screen-damage/</id>
    <content src="https://rito15.github.io/posts/unity-amplify-screen-damage/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity Shader" />
    
    <category term="Amplify Shader" />
    
  

  
    <summary>
      





      Summary


  피격 이펙트




Preview






Nodes






Download


  2021_0817_Screen Effect_Damage.zip



    </summary>
  

  </entry>

  
  <entry>
    <title>Screen Effect Controller [TODO]</title>
    <link href="https://rito15.github.io/posts/unity-screen-effect-controller/" rel="alternate" type="text/html" title="Screen Effect Controller [TODO]" />
    <published>2021-08-19T02:53:00+09:00</published>
  
    <updated>2021-08-19T02:53:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-screen-effect-controller/</id>
    <content src="https://rito15.github.io/posts/unity-screen-effect-controller/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity" />
    
    <category term="Unity Editor Utilities" />
    
  

  
    <summary>
      





      Summary


  간편하게 사용 가능한 스크린 이펙트(포스트 프로세싱) 컨트롤러




Preview




0. Download &amp;amp; Import


  
    Screen Effect Controller.unitypackage
  
  
    첨부 파일을 다운로드하고, 유니티 프로젝트가 켜져 있는 상태에서 실행합니다.
  
  
    임포트 창이 나타나면 Import 버튼을 클릭하여 프로젝트에 임포트합니다.
  




How To Use


  





    </summary>
  

  </entry>

</feed>


