* 각각 예제 : InputManager & Mover & Rotator

1. 개별 컴포넌트에서 입력을 모두 담당
 - 장점
   - 스크립트 작성 용이
   - 완성된 컴포넌트로서 다양한 프로젝트에 빠르게 재사용 가능

 - 단점
   - 입력의 중앙 제어 불가능(규모에 비례한 중복 코드 다수 발생 가능성)
   - 입력 받는 부분이 분산되어 규모에 비례해 관리 어려움 증가

2. 입력 매니저에서 입력값을 받아 관리
 + 개별 컴포넌트에서 입력 매니저를 참조해서 사용

 - 참조 방향 : 개별 컴포넌트 -> 입력 매니저
 - 입력 매니저는 그냥 입력만 받을뿐, 다른 클래스들을 모름

 - 장점
   - 

 - 단점
   - 

3. 입력 매니저에서 입력값을 받아 관리, 개별 컴포넌트들에 명령
 + 개별 컴포넌트에는 그저 기능만 구현

 - 참조 방향 : 입력 매니저 -> 개별 컴포넌트
 - 개별 컴포넌트들은 기능만 구현할 뿐, 입력 매니저에서 모두 사용

 - 장점
   - 

 - 단점
   - 